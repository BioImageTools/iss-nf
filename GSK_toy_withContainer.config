process {
    executor = 'slurm'
    //queue = 'htc-el8'
    cpus = 5
    memory = 10.GB
    time = 30.min
    //container = "docker://segonzal/fish_analysis:0.0.3"

    withLabel: 'infinitesimal' {
        cpus = 1
        memory = 200.MB
        time = 3.min
    }

    withLabel: 'tiler' {
        cpus = 2
        memory = 32.GB
        time = 25.min
    }

    withLabel: 'minimal' {
        cpus = 1
        memory = 400.MB
        time = 3.min
    }

    withLabel: 'singleImage' {
        cpus = 1
        memory = 16.GB
        time = 5.min
    }

    withLabel: 'registration' {
        cpus = 20 
        memory = 50.GB
        time = 30.min 
    }

    withLabel: 'small' {
        cpus = 1
        memory = 1200.MB
        time = 5.min
    }

    withLabel: 'decoding' {
        cpus = 2
        memory = 4.GB
        time = 5.min
    }

    withLabel: 'long' {
        cpus = 8
        memory = 32.GB
        time = 40.min
    }

    withLabel: 'beast' {
        cpus = 40
        memory = 256.GB
        time = 120.min
    }

    //withName: LEARN_TRANSFORM {
    //    container = '/home/nv066607/python_github_enterprise/iss-nf/reg_container.sif'
    //}

    withLabel: 'learn_registration' {
        cpus = {2  * task.attempt }
        memory = {10.GB * task.attempt }
        time = {10.min * task.attempt }
        container = '/home/nv066607/python_github_enterprise/iss-nf/reg_container.sif'
        //errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    
    }
    
    withLabel: 'apply_registration' {
        cpus = {5  * task.attempt }
        memory = {20.GB * task.attempt }
        time = {30.min * task.attempt }
        container = '/home/nv066607/python_github_enterprise/iss-nf/reg_container.sif'
        //errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    
    }

}

profiles {
  standard {
      process.executor = 'local'
  }
  cluster_slurm {
      process.executor = 'slurm'
  }
}

//singularity {
//  enabled = true
//  autoMounts = true
//  runOptions = "--contain --no-home"
//}

//apptainer {
//    autoMounts = true
//    docker.enabled = false
//    pullTimeout = "3 hours"
//    envWhitelist = 'CUDA_VISIBLE_DEVICES'
//}

//apptainer {
//    enabled = true
//	autoMounts = true
//}

singularity.enabled = true
singularity.autoMounts = true
process.container = '/home/nv066607/python_github_enterprise/iss-nf/reg_container.sif'

def INPUTDIR = "/hpc/scratch/hdd1/nv066607/ISS_tmp/MinimalData/"

params {
    inputRefImagePath = INPUTDIR + "anchor_nuclei.tif"
    inputMovImagesLearnPath = INPUTDIR + "r{0,1,2,3}_DAPI.tif"
    movingImagesApplyPath = INPUTDIR + "r{0,1,2,3}_*.tif"
    inputUntransformedImagesPath = INPUTDIR + "anchor_*.tif"
    elastix_parameter_files = "/home/nv066607/python_github_enterprise/migratedVersion/issdecoder/elastix_parameter_files/elastix_parameters_2D.*.txt"
    rescale_factor = 1
    outputDir = "/hpc/scratch/hdd1/nv066607/ISS_tmp/TilerOutput"
    ExpMetaJSON = "/home/nv066607/python_github_enterprise/iss-nf/data/experiment_metadata_Toysample.json"
    CodeJSON = "/home/nv066607/python_github_enterprise/iss-nf/data/codebook.json"
    //fov = "fov_001"
    qc_outputDir =  INPUTDIR + "QC_report"
}


