process {
    executor = 'slurm'
    //queue = 'htc-el8'
    cpus = 5
    memory = 10.GB
    time = 10.min
    maxRetries    = 1
    //container = "docker://segonzal/fish_analysis:0.0.3"

    withLabel: 'infinitesimal' {
        cpus = 1
        memory = 200.MB
        time = 3.min
    }

    withLabel: 'tiler' {
        cpus = {10* task.attempt }
        memory = {64.GB* task.attempt }
        time = {25.min* task.attempt }
    }

    withLabel: 'minimal' {
        cpus = {1 * task.attempt }
        memory = {400.MB * task.attempt }
        time = {3.min * task.attempt }
    }

    withLabel: 'singleImage' {
        cpus = {1 * task.attempt }
        memory = {16.GB * task.attempt }
        time = {5.min * task.attempt }
    }

    withLabel: 'learn_registration' {
        cpus = {10  * task.attempt }
        memory = {32.GB * task.attempt }
        time = {10.min * task.attempt }
        //errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    
    }
    
    withLabel: 'apply_registration' {
        cpus = {30  * task.attempt }
        memory = {64.GB * task.attempt }
        time = {30.min * task.attempt }
        //errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    
    }

    withLabel: 'concat' {
        cpus = {10  * task.attempt }
        memory = {32.GB * task.attempt }
        time = {5.min * task.attempt }
        //errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    
    }

    withLabel: 'small' {
        cpus = {5 * task.attempt }
        memory = {16.GB * task.attempt }
        time = {5.min * task.attempt }
    }

    withLabel: 'decoding_starfish' {
        cpus = {20  * task.attempt }
        memory = {32.GB * task.attempt }
        time = {30.min * task.attempt }
    }

    withLabel: 'decoding_postcode' {
        cpus = {20  * task.attempt }
        memory = {200.GB * task.attempt }
        time = {60.min * task.attempt }
    }

    withLabel: 'long' {
        cpus = {8 * task.attempt }
        memory = {32.GB * task.attempt }
        time = {40.min * task.attempt }
    }

    withLabel: 'beast' {
        cpus = {30 * task.attempt }
        memory = {128.GB * task.attempt }
        time = {30.min * task.attempt }
    }
}

apptainer {
    enabled = true
	autoMounts = true
}

//def INPUTDIR = "/hpc/scratch/hdd1/nv066607/ISS_tmp/ISS_425_NSCLC199_BL3/Stitched/"
//def INPUTDIR = "/hpc/scratch/hdd1/nv066607/ISS_tmp/ISS_566_NSCLC230_BL1/Stitched/"
def INPUTDIR = "/hpc/scratch/hdd1/nv066607/ISS_tmp/ISS_567_NSCLC236_BL1/Stitched/"

params {
    n_gene_panel = 242
    MICROM_PER_PX = 0.1625
    desired_genes = "/hpc/scratch/hdd2/nv066607/iss-nf/data/desired_genes.json"
    housekeepers = "/hpc/scratch/hdd2/nv066607/iss-nf/data/housekeepers.json"
    empty_barcodes = "/hpc/scratch/hdd2/nv066607/iss-nf/data/empty_barcodes.json"
    remove_genes = "/hpc/scratch/hdd2/nv066607/iss-nf/data/remove_genes.json"
    invalid_codes = "/hpc/scratch/hdd2/nv066607/iss-nf/data/invalid_codes.json"
    inputRefImagePath = INPUTDIR + "anchor_nuclei.tif*"
    inputMovImagesLearnPath = INPUTDIR + "r*_DAPI.tif*"
    movingImagesApplyPath = INPUTDIR + "r*_*.tif*"
    inputUntransformedImagesPath = INPUTDIR + "anchor_*.tif*"
    elastix_parameter_files = "/home/nv066607/python_github_enterprise/migratedVersion/issdecoder/elastix_parameter_files/elastix_parameters_2D.*.txt"
    rescale_factor = "5"
    ExpMetaJSON = "/home/nv066607/python_github_enterprise/iss-nf/data/experiment_metadata_sample.json/"
    CodeJSON = "/hpc/scratch/hdd2/nv066607/iss-nf/codebook_real/codebook.json"
    PoSTcode = true
}
