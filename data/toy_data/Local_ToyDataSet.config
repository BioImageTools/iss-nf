process {
    //executor = 'slurm'
    //queue = 'htc-el8'
    cpus = 1
    memory = 600.MB
    time = 7.min
    //container = "segonzal/starfish_itkelastix:0.0.1"

    withLabel: 'infinitesimal' {
        cpus = 1
        memory = 200.MB
        //container = "segonzal/starfish_itkelastix:0.0.2"
    }

    withLabel: 'minimal' {
        cpus = 1
        memory = 400.MB
        //container = "segonzal/starfish_itkelastix:0.0.2"
    }

    withLabel: 'small' {
        cpus = 1
        memory = 1200.MB
        time = 5.min
    }

    withLabel: 'long' {
        cpus = 8
        memory = 32.GB
    }

    withLabel: 'learn_registration' {
        cpus = {4  * task.attempt }
        memory = {8.GB * task.attempt }
        time = {10.min * task.attempt }
        //errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    }
    withLabel: 'registration' {
        cpus = 4
        memory = 8.GB
        //container = "segonzal/fish_analysis:0.0.2"
    }

    withLabel: 'singleImage' {
        cpus = 4
        memory = 8.GB
        //container = "segonzal/starfish_itkelastix:0.0.2"
    }

    withLabel: 'decoding' {
        cpus = 4
        memory = 8.GB
    }

    withLabel: 'beast' {
        cpus = 4
        memory = 8.GB
    }

    withLabel: 'singleImage' {
        cpus = 4
        memory = 8.GB
    }
}

docker {
    enabled = true
}

def INPUTDIR = "/Users/segonzal/Documents/FinishMe/test_data/"

params {
    PoSTcode = false
    inputRefImagePath = INPUTDIR + "anchor_nuclei.tif*"
    inputMovImagesLearnPath = INPUTDIR + "r*_DAPI.tif*"
    movingImagesApplyPath = INPUTDIR + "r*_*.tif*"
    inputUntransformedImagesPath = INPUTDIR + "anchor_*.tif*"
    rescale_factor = "2"
    elastix_parameter_files = "$baseDir/parameter_files/elastix_parameters_2D.*.txt"
    ExpMetaJSON = "$baseDir/experiment_metadata_minimal_dataset.json"
    CodeJSON = "$baseDir/codebook.json"
    fov = "fov_001"
}
