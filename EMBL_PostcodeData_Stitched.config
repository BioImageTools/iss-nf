process {
    executor = 'slurm'
    queue = 'htc-el8'
    cpus = 1
    memory = 600.MB
    time = 20.min
    //container = "docker://segonzal/fish_analysis:0.0.3"

    withLabel: 'infinitesimal' {
        cpus = 1
        memory = 200.MB
        time = 3.min
    }

    withLabel: 'singleImage' {
        cpus = {1 * task.attempt }
        memory = {16.GB * task.attempt }
        time = {5.min * task.attempt }
    }

    withLabel: 'minimal' {
        cpus = 1
        memory = 400.MB
        time = 10.min
    }

    withLabel: 'small' {
        cpus = 1
        memory = 1200.MB
        time = 5.min
    }

    withLabel: 'long' {
        cpus = 8
        memory = 32.GB
    }

    withLabel: 'registration' {
        cpus = 8
        memory = 32.GB
    }

    withLabel: 'learn_registration' {
        cpus = {10  * task.attempt }
        memory = {32.GB * task.attempt }
        time = {10.min * task.attempt }
    }

    withLabel: 'apply_registration' {
        cpus = {30  * task.attempt }
        memory = {64.GB * task.attempt }
        time = {30.min * task.attempt }
    }

    withLabel: 'decoding' {
        cpus = 4
        memory = 16.GB
    }

    withLabel: 'decoding_starfish' {
        cpus = 4
        memory = 16.GB
    }

    withLabel: 'beast' {
        cpus = 16
        memory = 128.GB
        time = 60.min
    }

    withLabel: 'decoding_postcode' {
        cpus = {20  * task.attempt }
        memory = {200.GB * task.attempt }
        time = {60.min * task.attempt }
    }

    withLabel: 'concat' {
        cpus = {2  * task.attempt }
        memory = {8.GB * task.attempt }
        time = {5.min * task.attempt }
        //errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    }
}

apptainer {
    enabled = true
	autoMounts = true
}

def INPUTDIR = "/scratch/segonzal/postcode_data/Stitched/"

params {
    MICROM_PER_PX = 0.1625
    n_gene_panel = 50
    desired_genes = "/scratch/segonzal/iss-nf/data/desired_genes_None.json"
    housekeepers = "/scratch/segonzal/iss-nf/data/housekeepers_None.json"
    empty_barcodes = "/scratch/segonzal/iss-nf/data/empty_barcodes_postcode.json"
    remove_genes = "/scratch/segonzal/iss-nf/data/remove_genes.json"
    invalid_codes = "/scratch/segonzal/iss-nf/data/invalid_codes.json"
    PoSTcode = true
    inputRefImagePath = INPUTDIR + "anchor_nuclei.tif*"
    inputMovImagesLearnPath = INPUTDIR + "r*_DAPI.tif*"
    movingImagesApplyPath = INPUTDIR + "r*_*.tif*"
    inputUntransformedImagesPath = INPUTDIR + "anchor_*.tif*"
    rescale_factor = "2"
    elastix_parameter_files = "/scratch/segonzal/iss-nf/parameter_files/elastix_parameters_2D.{2,3}.txt"
    ExpMetaJSON = "/scratch/segonzal/iss-nf/data/experiment_metadata_postcode_data_stitched.json"
    CodeJSON = "/scratch/segonzal/iss-nf/data/codebook.json"
    fov = "fov_001"
    primary_coords = "/scratch/segonzal/postcode_data/*coordinates.csv"
    fovs2decode = "/scratch/segonzal/postcode_data/fovs.txt"
    primary_images = "/scratch/segonzal/postcode_data/AllTilesNorm/primary*.tif*"
    tile_images = "/scratch/segonzal/postcode_data/AllTilesNorm/*.tif*"
}
